{{#extend 'css'}}
    <style media="screen">
        .grid-item{
            background-color: #a00b0b;
            color: whitesmoke;
            text-align: center;
        }

        .fav{
            background-color: #3e842e;
            border: 1px solid #3e842e;
            color: white;
            cursor: pointer;
            padding: 4px;
        }
        .unfav{
            background-color: #4444c1;
            border: 1px solid #4444c1;
            color: white;
            cursor: pointer;
            padding: 4px;
        }

    </style>
{{/extend}}

<h1>{{currentUser.twitter_username}}</h1>

<h3>List of my posts</h3>

{{#if posts}}
    <div class="grid">
        {{#each posts}}
                <div class="grid-item">
                    <img src="{{this.image}}" alt="{{this.title}}" />
                    <p>
                        {{this.title}}
                    </p>
                    <button onclick="favPost('{{this.id}}')" class="unfav" data-postid="{{this.id}}">Fav</button>
                    <p>
                        Favs: <span class="favorites-count">{{this.favorites.length}}</span>
                    </p>
                    <button onclick="deletePost(this)" data-postid="{{this.id}}">Delete</button>
                </div>
        {{/each}}
    </div>
{{/if}}

{{#if postsFaved}}
    <div class="grid">
        {{#each postsFaved}}
                <div class="grid-item">
                    <img src="{{this.image}}" alt="{{this.title}}" />
                    <p>
                        {{this.title}}
                    </p>
                    <button onclick="unfavPost('{{this.id}}')" class="fav" data-postid="{{this.id}}">Unfav</button>
                    <p>
                        Favs: <span class="favorites-count">{{this.favorites.length}}</span>
                    </p>
                    <button onclick="deletePost(this)" data-postid="{{this.id}}">Delete</button>
                </div>
        {{/each}}
    </div>
{{/if}}

{{#extend 'js'}}
    <script src="https://unpkg.com/masonry-layout@4.1/dist/masonry.pkgd.min.js"></script>
    <script type="text/javascript">

        var timers = [];

        var masonry = new Masonry('.grid',{ itemSelector: '.grid-item' });

        function deletePost(elem){

            var postID = elem.dataset.postid;
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function(){
                if (xhttp.readyState == 4 && xhttp.status == 200) {
                    deletePostDOM(elem);
                }
            }
            xhttp.open("DELETE", "/users/posts/delete", true);
            xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhttp.send("postID=" + postID);
        }

        function deletePostDOM(elem){
            /* parentNode.removeChild(childNode) */
            (document.getElementsByClassName('grid')[0]).removeChild(elem.parentNode);
        }

        function favPost(postID){
            var elem = document.querySelector(".unfav[data-postid='" + postID + "']");
            elem.innerHTML = 'Unfav';
            elem.setAttribute('class', 'fav');
            elem.setAttribute('onclick', "unfavPost('" + postID + "')");

            /* update count fav */
            var $favoriteCount = elem.parentNode.children[3].getElementsByClassName('favorites-count')[0];
            var favoriteCount = +$favoriteCount.innerHTML;
            $favoriteCount.innerHTML = ++favoriteCount;

            var timer = setTimeout(function(){

                sendFav(postID);

                for(var i = 0; i < timers.length; i++){
                    if(timers[i].id === postID){
                        timers.splice(i, 1);
                        break;
                    }
                }

            }, 3000);

            timers.push({id: postID, timer});

        }

        function unfavPost(postID){
            var elem = document.querySelector(".fav[data-postid='" + postID + "']");
            elem.innerHTML = 'Fav';
            elem.setAttribute('class', 'unfav');
            elem.setAttribute('onclick', "favPost('" + postID + "')");

            /* update count fav */
            var $favoriteCount = elem.parentNode.children[3].getElementsByClassName('favorites-count')[0];
            var favoriteCount = +$favoriteCount.innerHTML;
            $favoriteCount.innerHTML = --favoriteCount;

            if(timers.length === 0){
                return sendUnfav(postID);
            }

            for(var i = 0; i < timers.length; i++){
                if(timers[i].id === postID){
                    clearTimeout(timers[i].timer);
                    timers.splice(i, 1);
                    break;
                }
                /* the post is actually favorited, and there is timers scheduled */
                if(i === timers.length - 1){
                    sendUnfav(postID);
                }
            }

        }

        function sendFav(postID){

            var xhttp = new XMLHttpRequest();

            xhttp.onreadystatechange = function(){

                if(xhttp.status === 200 && xhttp.readyState === 4){
                    console.log(xhttp.responseText);
                }

            }

            xhttp.open('PATCH', '/users/posts/favorite', true);
            xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhttp.send('postID=' + postID.trim());

        }

        function sendUnfav(postID){

            var xhttp = new XMLHttpRequest();

            xhttp.onreadystatechange = function(){

                if(xhttp.status === 200 && xhttp.readyState === 4){
                    console.log(xhttp.responseText);
                }

            }

            xhttp.open('PATCH', '/users/posts/unfavorite', true);
            xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhttp.send('postID=' + postID.trim());

        }

    </script>
{{/extend}}
